before_script:
  - pwd
  - type multiwerf && source <(multiwerf use 1.1 beta)
  - type werf && source <(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose)

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  CI_NAMESPACE: ${CI_ENVIRONMENT_SLUG}

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm/

stages:
  - build
  - deploy
  - cleanup

build:
  stage: build
  script:
    - werf build-and-publish --stages-storage :local
  tags:
    - karma-shell
  except:
    - schedules

.base_deploy:
  script:
    - set -x
    - werf deploy --stages-storage :local
      --namespace ${CI_NAMESPACE}
      --set "global.env=${KARMA_ENV}"
      --set "global.ci_url=$(cut -d / -f 3 <<< $CI_ENVIRONMENT_URL)"
      --timeout "${DEPLOY_TIMEOUT:-600}"
  tags:
    - karma-shell
  except:
    - schedules
  stage: deploy
  dependencies:
    - build

to develop:
  extends: .base_deploy
  environment:
    name: hlf-explorer
    url: http://${CI_ENVIRONMENT_SLUG}.karma.n-t.io
  variables:
    WERF_KUBE_CONTEXT: karma-dev
    KARMA_ENV: develop
    CI_NAMESPACE: karma-develop
  only:
    - master
  dependencies:
    - build

cleanup:
  stage: cleanup
  script:
    - type multiwerf && source <(multiwerf use 1.0 beta)
    - type werf && source <(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose)
    - docker login -u nobody -p ${WERF_IMAGES_CLEANUP_PASSWORD} ${WERF_IMAGES_REPO}
    - werf cleanup --stages-storage :local
  only:
    - schedules
  tags:
    - karma-shell
